//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CLIENT.TodoService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserClient", Namespace="http://schemas.datacontract.org/2004/07/SOP_WCF")]
    [System.SerializableAttribute()]
    public partial class UserClient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string guidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                if ((object.ReferenceEquals(this.guidField, value) != true)) {
                    this.guidField = value;
                    this.RaisePropertyChanged("guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TodoModel", Namespace="http://schemas.datacontract.org/2004/07/SOP_WCF")]
    [System.SerializableAttribute()]
    public partial class TodoModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string todo_authorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string todo_bodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string todo_deadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int todo_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string todo_priorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string todo_titleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string todo_author {
            get {
                return this.todo_authorField;
            }
            set {
                if ((object.ReferenceEquals(this.todo_authorField, value) != true)) {
                    this.todo_authorField = value;
                    this.RaisePropertyChanged("todo_author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string todo_body {
            get {
                return this.todo_bodyField;
            }
            set {
                if ((object.ReferenceEquals(this.todo_bodyField, value) != true)) {
                    this.todo_bodyField = value;
                    this.RaisePropertyChanged("todo_body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string todo_deadline {
            get {
                return this.todo_deadlineField;
            }
            set {
                if ((object.ReferenceEquals(this.todo_deadlineField, value) != true)) {
                    this.todo_deadlineField = value;
                    this.RaisePropertyChanged("todo_deadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int todo_id {
            get {
                return this.todo_idField;
            }
            set {
                if ((this.todo_idField.Equals(value) != true)) {
                    this.todo_idField = value;
                    this.RaisePropertyChanged("todo_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string todo_priority {
            get {
                return this.todo_priorityField;
            }
            set {
                if ((object.ReferenceEquals(this.todo_priorityField, value) != true)) {
                    this.todo_priorityField = value;
                    this.RaisePropertyChanged("todo_priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string todo_title {
            get {
                return this.todo_titleField;
            }
            set {
                if ((object.ReferenceEquals(this.todo_titleField, value) != true)) {
                    this.todo_titleField = value;
                    this.RaisePropertyChanged("todo_title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginFailedFault", Namespace="http://schemas.datacontract.org/2004/07/SOP_WCF")]
    [System.SerializableAttribute()]
    public partial class LoginFailedFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoAvailableTodoFault", Namespace="http://schemas.datacontract.org/2004/07/SOP_WCF")]
    [System.SerializableAttribute()]
    public partial class NoAvailableTodoFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TodoNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/SOP_WCF")]
    [System.SerializableAttribute()]
    public partial class TodoNotFoundFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TodoService.ITodoService")]
    public interface ITodoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/ListAll", ReplyAction="http://tempuri.org/ITodoService/ListAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CLIENT.TodoService.LoginFailedFault), Action="http://tempuri.org/ITodoService/ListAllLoginFailedFaultFault", Name="LoginFailedFault", Namespace="http://schemas.datacontract.org/2004/07/SOP_WCF")]
        [System.ServiceModel.FaultContractAttribute(typeof(CLIENT.TodoService.NoAvailableTodoFault), Action="http://tempuri.org/ITodoService/ListAllNoAvailableTodoFaultFault", Name="NoAvailableTodoFault", Namespace="http://schemas.datacontract.org/2004/07/SOP_WCF")]
        CLIENT.TodoService.TodoModel[] ListAll(CLIENT.TodoService.UserClient client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/ListAll", ReplyAction="http://tempuri.org/ITodoService/ListAllResponse")]
        System.Threading.Tasks.Task<CLIENT.TodoService.TodoModel[]> ListAllAsync(CLIENT.TodoService.UserClient client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/ListById", ReplyAction="http://tempuri.org/ITodoService/ListByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CLIENT.TodoService.LoginFailedFault), Action="http://tempuri.org/ITodoService/ListByIdLoginFailedFaultFault", Name="LoginFailedFault", Namespace="http://schemas.datacontract.org/2004/07/SOP_WCF")]
        [System.ServiceModel.FaultContractAttribute(typeof(CLIENT.TodoService.TodoNotFoundFault), Action="http://tempuri.org/ITodoService/ListByIdTodoNotFoundFaultFault", Name="TodoNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/SOP_WCF")]
        CLIENT.TodoService.TodoModel[] ListById(string id, CLIENT.TodoService.UserClient client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/ListById", ReplyAction="http://tempuri.org/ITodoService/ListByIdResponse")]
        System.Threading.Tasks.Task<CLIENT.TodoService.TodoModel[]> ListByIdAsync(string id, CLIENT.TodoService.UserClient client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/Insert", ReplyAction="http://tempuri.org/ITodoService/InsertResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CLIENT.TodoService.LoginFailedFault), Action="http://tempuri.org/ITodoService/InsertLoginFailedFaultFault", Name="LoginFailedFault", Namespace="http://schemas.datacontract.org/2004/07/SOP_WCF")]
        bool Insert(string title, string body, string author, string deadline, string priority, CLIENT.TodoService.UserClient client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/Insert", ReplyAction="http://tempuri.org/ITodoService/InsertResponse")]
        System.Threading.Tasks.Task<bool> InsertAsync(string title, string body, string author, string deadline, string priority, CLIENT.TodoService.UserClient client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/Update", ReplyAction="http://tempuri.org/ITodoService/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CLIENT.TodoService.LoginFailedFault), Action="http://tempuri.org/ITodoService/UpdateLoginFailedFaultFault", Name="LoginFailedFault", Namespace="http://schemas.datacontract.org/2004/07/SOP_WCF")]
        bool Update(string id, string title, string body, string author, string deadline, string priority, CLIENT.TodoService.UserClient client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/Update", ReplyAction="http://tempuri.org/ITodoService/UpdateResponse")]
        System.Threading.Tasks.Task<bool> UpdateAsync(string id, string title, string body, string author, string deadline, string priority, CLIENT.TodoService.UserClient client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/Delete", ReplyAction="http://tempuri.org/ITodoService/DeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CLIENT.TodoService.LoginFailedFault), Action="http://tempuri.org/ITodoService/DeleteLoginFailedFaultFault", Name="LoginFailedFault", Namespace="http://schemas.datacontract.org/2004/07/SOP_WCF")]
        bool Delete(string id, CLIENT.TodoService.UserClient client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/Delete", ReplyAction="http://tempuri.org/ITodoService/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(string id, CLIENT.TodoService.UserClient client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/Login", ReplyAction="http://tempuri.org/ITodoService/LoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CLIENT.TodoService.LoginFailedFault), Action="http://tempuri.org/ITodoService/LoginLoginFailedFaultFault", Name="LoginFailedFault", Namespace="http://schemas.datacontract.org/2004/07/SOP_WCF")]
        CLIENT.TodoService.UserClient Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/Login", ReplyAction="http://tempuri.org/ITodoService/LoginResponse")]
        System.Threading.Tasks.Task<CLIENT.TodoService.UserClient> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/Logout", ReplyAction="http://tempuri.org/ITodoService/LogoutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CLIENT.TodoService.LoginFailedFault), Action="http://tempuri.org/ITodoService/LogoutLoginFailedFaultFault", Name="LoginFailedFault", Namespace="http://schemas.datacontract.org/2004/07/SOP_WCF")]
        bool Logout(CLIENT.TodoService.UserClient client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/Logout", ReplyAction="http://tempuri.org/ITodoService/LogoutResponse")]
        System.Threading.Tasks.Task<bool> LogoutAsync(CLIENT.TodoService.UserClient client);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITodoServiceChannel : CLIENT.TodoService.ITodoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TodoServiceClient : System.ServiceModel.ClientBase<CLIENT.TodoService.ITodoService>, CLIENT.TodoService.ITodoService {
        
        public TodoServiceClient() {
        }
        
        public TodoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TodoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TodoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TodoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CLIENT.TodoService.TodoModel[] ListAll(CLIENT.TodoService.UserClient client) {
            return base.Channel.ListAll(client);
        }
        
        public System.Threading.Tasks.Task<CLIENT.TodoService.TodoModel[]> ListAllAsync(CLIENT.TodoService.UserClient client) {
            return base.Channel.ListAllAsync(client);
        }
        
        public CLIENT.TodoService.TodoModel[] ListById(string id, CLIENT.TodoService.UserClient client) {
            return base.Channel.ListById(id, client);
        }
        
        public System.Threading.Tasks.Task<CLIENT.TodoService.TodoModel[]> ListByIdAsync(string id, CLIENT.TodoService.UserClient client) {
            return base.Channel.ListByIdAsync(id, client);
        }
        
        public bool Insert(string title, string body, string author, string deadline, string priority, CLIENT.TodoService.UserClient client) {
            return base.Channel.Insert(title, body, author, deadline, priority, client);
        }
        
        public System.Threading.Tasks.Task<bool> InsertAsync(string title, string body, string author, string deadline, string priority, CLIENT.TodoService.UserClient client) {
            return base.Channel.InsertAsync(title, body, author, deadline, priority, client);
        }
        
        public bool Update(string id, string title, string body, string author, string deadline, string priority, CLIENT.TodoService.UserClient client) {
            return base.Channel.Update(id, title, body, author, deadline, priority, client);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAsync(string id, string title, string body, string author, string deadline, string priority, CLIENT.TodoService.UserClient client) {
            return base.Channel.UpdateAsync(id, title, body, author, deadline, priority, client);
        }
        
        public bool Delete(string id, CLIENT.TodoService.UserClient client) {
            return base.Channel.Delete(id, client);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(string id, CLIENT.TodoService.UserClient client) {
            return base.Channel.DeleteAsync(id, client);
        }
        
        public CLIENT.TodoService.UserClient Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<CLIENT.TodoService.UserClient> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public bool Logout(CLIENT.TodoService.UserClient client) {
            return base.Channel.Logout(client);
        }
        
        public System.Threading.Tasks.Task<bool> LogoutAsync(CLIENT.TodoService.UserClient client) {
            return base.Channel.LogoutAsync(client);
        }
    }
}
